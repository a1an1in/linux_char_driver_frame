!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	list.c	/^struct A{$/;"	s	file:
BGC	debug.h	69;"	d
BLACK	debug.h	55;"	d
BLUE	debug.h	59;"	d
CC	Makefile	/^CC = gcc$/;"	m
DARK_GREEN	debug.h	61;"	d
DATA_LIST	list.c	33;"	d	file:
DBG_CORRECT	debug.h	80;"	d
DBG_DETAIL	debug.h	87;"	d
DBG_ERROR	debug.h	76;"	d
DBG_FATAL	debug.h	77;"	d
DBG_FLOW	debug.h	84;"	d
DBG_IMPORTANT	debug.h	86;"	d
DBG_NON1	debug.h	78;"	d
DBG_NON2	debug.h	81;"	d
DBG_NON3	debug.h	83;"	d
DBG_PANIC	debug.h	75;"	d
DBG_SUC	debug.h	79;"	d
DBG_VIP	debug.h	85;"	d
DBG_WARNNING	debug.h	82;"	d
ERRORIP	debug.h	50;"	d
FTC	debug.h	70;"	d
GREEN	debug.h	57;"	d
HEAD_LIST	list.c	27;"	d	file:
HIGHLIGHT_FLAG	debug.h	66;"	d
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
LIBS	Makefile	/^LIBS = -lpthread$/;"	m
LIST_BEGIN	list.c	114;"	d	file:
LIST_END	list.c	119;"	d	file:
LIST_EQUAL	list.c	134;"	d	file:
LIST_FOR_EACH_SAF	list.c	147;"	d	file:
LIST_GET_DATA	list.c	140;"	d	file:
LIST_HEAD	list.h	45;"	d
LIST_HEAD_INIT	list.h	43;"	d
LIST_INIT_HLIST	list.c	39;"	d	file:
LIST_NEXT	list.c	124;"	d	file:
LIST_POISON1	list.h	26;"	d
LIST_POISON2	list.h	27;"	d
LIST_POP_BACK	list.c	97;"	d	file:
LIST_POP_FRONT	list.c	80;"	d	file:
LIST_PREV	list.c	129;"	d	file:
LIST_PUSH_BACK	list.c	64;"	d	file:
LIST_PUSH_FRONT	list.c	48;"	d	file:
LV_CORRECT	debug.h	/^	LV_CORRECT,$/;"	e	enum:__anon1
LV_DETAIL	debug.h	/^	LV_DETAIL$/;"	e	enum:__anon1
LV_ERROR	debug.h	/^	LV_ERROR ,		$/;"	e	enum:__anon1
LV_FATAL	debug.h	/^	LV_FATAL, 		$/;"	e	enum:__anon1
LV_FLOW	debug.h	/^	LV_FLOW , 		$/;"	e	enum:__anon1
LV_IMPORTANT	debug.h	/^	LV_IMPORTANT, 		$/;"	e	enum:__anon1
LV_NON1	debug.h	/^	LV_NON1,$/;"	e	enum:__anon1
LV_NON2	debug.h	/^	LV_NON2,$/;"	e	enum:__anon1
LV_NON3	debug.h	/^	LV_NON3,$/;"	e	enum:__anon1
LV_PANIC	debug.h	/^	LV_PANIC=0, 		$/;"	e	enum:__anon1
LV_SUC	debug.h	/^	LV_SUC ,		$/;"	e	enum:__anon1
LV_VIP	debug.h	/^	LV_VIP, 	$/;"	e	enum:__anon1
LV_WARNNING	debug.h	/^	LV_WARNNING,$/;"	e	enum:__anon1
MAX_IP_LEN	debug.c	15;"	d	file:
MAX_IP_LEN	debug.c	17;"	d	file:
MAX_STR_LEN	debug.c	126;"	d	file:
MAX_STR_LEN	debug.c	164;"	d	file:
MAX_STR_LEN	debug.c	168;"	d	file:
MAX_STR_LEN	debug.c	203;"	d	file:
MAX_STR_LEN	debug.c	223;"	d	file:
MAX_STR_LEN	debug.c	260;"	d	file:
OBJS	Makefile	/^OBJS = $(patsubst %.c,%.o,$(SRCS))  #子目录obj$/;"	m
OPEN_DEBUG	debug.h	93;"	d
OPEN_PDEBUG	debug.h	94;"	d
OPEN_SDEBUG	debug.h	95;"	d
PDEBUG_LEVEL	debug.h	90;"	d
PS	debug.h	109;"	d
PS	debug.h	99;"	d
PSB	debug.h	103;"	d
PSB	debug.h	110;"	d
PURPLE	debug.h	60;"	d
RED	debug.h	56;"	d
REVERSE_COLOR_FLAG	debug.h	65;"	d
SDEBUG_LEVEL	debug.h	91;"	d
SRCS	Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SS	debug.h	114;"	d
SS	debug.h	120;"	d
SSB	debug.h	117;"	d
SSB	debug.h	121;"	d
TARGET	Makefile	/^TARGET =test$/;"	m
WHITE	debug.h	62;"	d
YELLOW	debug.h	58;"	d
_LINUX_LIST_H	list.h	2;"	d
__DEBUG_H__	debug.h	2;"	d
__MEMORY_MANAGEMENT__	memory_management.h	2;"	d
__list_add	list.h	/^static inline void __list_add(struct list_head *add,$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_for_each	list.h	331;"	d
__list_for_each_rcu	list.h	486;"	d
__list_splice	list.h	/^static inline void __list_splice(struct list_head *list,$/;"	f
_offsetof	list.h	10;"	d
a	list.c	/^	int a;$/;"	m	struct:A	file:
b	list.c	/^	int b;$/;"	m	struct:A	file:
buf_to_str	debug.c	/^size_t buf_to_str(uint8_t *baddr,size_t blen,char *str,size_t str_len)$/;"	f
color_print_dbg_level	debug.c	/^void color_print_dbg_level(uint32_t set_str)$/;"	f
color_printf	debug.c	/^int color_printf(int set_value,const char *fmt,...)$/;"	f
color_printf_buffer	debug.c	/^void color_printf_buffer(int set_value,uint8_t *buf,size_t len,const char *fmt,...)$/;"	f
container_of	list.h	19;"	d
dbg_buf	debug.h	135;"	d
dbg_buf	debug.h	146;"	d
dbg_str	debug.h	126;"	d
dbg_str	debug.h	145;"	d
debug_ip	debug.c	/^char debug_ip[MAX_IP_LEN] = "127.0.0.1";$/;"	v
debug_port	debug.c	/^unsigned int debug_port = 10276;$/;"	v
get_dbg_level	debug.h	72;"	d
get_ipaddr	debug.c	/^const char *get_ipaddr(void)  $/;"	f
init_dgram	debug.c	/^void init_dgram(void)$/;"	f
list_add	list.h	/^static inline void list_add(struct list_head *add, struct list_head *head)$/;"	f
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *add, struct list_head *head)$/;"	f
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_del_rcu	list.h	/^static inline void list_del_rcu(struct list_head *entry)$/;"	f
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_entry	list.h	309;"	d
list_for_each	list.h	317;"	d
list_for_each_continue_rcu	list.h	536;"	d
list_for_each_entry	list.h	359;"	d
list_for_each_entry_continue	list.h	395;"	d
list_for_each_entry_from	list.h	408;"	d
list_for_each_entry_rcu	list.h	518;"	d
list_for_each_entry_reverse	list.h	370;"	d
list_for_each_entry_safe	list.h	419;"	d
list_for_each_entry_safe_continue	list.h	435;"	d
list_for_each_entry_safe_from	list.h	451;"	d
list_for_each_entry_safe_reverse	list.h	466;"	d
list_for_each_prev	list.h	339;"	d
list_for_each_rcu	list.h	481;"	d
list_for_each_safe	list.h	349;"	d
list_for_each_safe_rcu	list.h	503;"	d
list_head	list.h	/^struct list_head {$/;"	s
list_is_last	list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_move	list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_prepare_entry	list.h	383;"	d
list_replace	list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
list_splice	list.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
log_buf	debug.c	/^void log_buf(size_t level,const char *const_fmt,uint8_t *buf,size_t len,const char *fmt,...)$/;"	f
log_str	debug.c	/^void log_str(size_t level,const char *fmt,...)$/;"	f
main	list.c	/^int main()$/;"	f
mem_alloc_pck	memory_management.c	/^void *mem_alloc_pck(void *from,uint32_t size,uint32_t flag)$/;"	f
next	list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
prefetch	list.h	/^static inline void prefetch(const void *x) {;}$/;"	f
prev	list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
printf_buffer	debug.c	/^void printf_buffer(uint8_t *buf,size_t len)$/;"	f
sd	debug.c	/^int sd;$/;"	v
send_dgram	debug.c	/^int send_dgram(void *data,size_t len)$/;"	f
send_dgram_lock	debug.c	/^pthread_mutex_t send_dgram_lock;$/;"	v
sstr	debug.c	/^void sstr(size_t slen,const char *fmt,...)$/;"	f
sstr_buf	debug.c	/^size_t sstr_buf(size_t str_len,const char *fmt,uint8_t *baddr,size_t blen)$/;"	f
swap16	debug.h	52;"	d
u16	list.h	/^typedef unsigned short    u16;$/;"	t
u32	list.h	/^typedef unsigned int      u32;$/;"	t
u8	list.h	/^typedef unsigned char     u8;$/;"	t
uint32_t	memory_management.h	/^typedef unsigned int uint32_t;$/;"	t
vl_color_printf	debug.c	/^size_t vl_color_printf(size_t set_value,const char *fmt,va_list vl)$/;"	f
vl_sstr	debug.c	/^size_t vl_sstr(size_t slen,const char *fmt,va_list vl)$/;"	f
