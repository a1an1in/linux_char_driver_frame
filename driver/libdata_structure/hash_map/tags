!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BGC	debug.h	69;"	d
BLACK	debug.h	55;"	d
BLUE	debug.h	59;"	d
CC	Makefile	/^CC = gcc$/;"	m
DARK_GREEN	debug.h	61;"	d
DBG_CORRECT	debug.h	80;"	d
DBG_DETAIL	debug.h	87;"	d
DBG_ERROR	debug.h	76;"	d
DBG_FATAL	debug.h	77;"	d
DBG_FLOW	debug.h	84;"	d
DBG_IMPORTANT	debug.h	86;"	d
DBG_NON1	debug.h	78;"	d
DBG_NON2	debug.h	81;"	d
DBG_NON3	debug.h	83;"	d
DBG_PANIC	debug.h	75;"	d
DBG_SUC	debug.h	79;"	d
DBG_VIP	debug.h	85;"	d
DBG_WARNNING	debug.h	82;"	d
ERRORIP	debug.h	50;"	d
FTC	debug.h	70;"	d
GREEN	debug.h	57;"	d
HIGHLIGHT_FLAG	debug.h	66;"	d
HLIST_HEAD	list.h	641;"	d
HLIST_HEAD_INIT	list.h	640;"	d
INIT_HLIST_HEAD	list.h	642;"	d
INIT_HLIST_NODE	list.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
LIBS	Makefile	/^LIBS = -lpthread$/;"	m
LIST_HEAD	list.h	52;"	d
LIST_HEAD_INIT	list.h	50;"	d
LIST_POISON1	list.h	33;"	d
LIST_POISON2	list.h	34;"	d
LV_CORRECT	debug.h	/^	LV_CORRECT,$/;"	e	enum:__anon1
LV_DETAIL	debug.h	/^	LV_DETAIL$/;"	e	enum:__anon1
LV_ERROR	debug.h	/^	LV_ERROR ,		$/;"	e	enum:__anon1
LV_FATAL	debug.h	/^	LV_FATAL, 		$/;"	e	enum:__anon1
LV_FLOW	debug.h	/^	LV_FLOW , 		$/;"	e	enum:__anon1
LV_IMPORTANT	debug.h	/^	LV_IMPORTANT, 		$/;"	e	enum:__anon1
LV_NON1	debug.h	/^	LV_NON1,$/;"	e	enum:__anon1
LV_NON2	debug.h	/^	LV_NON2,$/;"	e	enum:__anon1
LV_NON3	debug.h	/^	LV_NON3,$/;"	e	enum:__anon1
LV_PANIC	debug.h	/^	LV_PANIC=0, 		$/;"	e	enum:__anon1
LV_SUC	debug.h	/^	LV_SUC ,		$/;"	e	enum:__anon1
LV_VIP	debug.h	/^	LV_VIP, 	$/;"	e	enum:__anon1
LV_WARNNING	debug.h	/^	LV_WARNNING,$/;"	e	enum:__anon1
MAX_IP_LEN	debug.c	15;"	d	file:
MAX_IP_LEN	debug.c	17;"	d	file:
MAX_STR_LEN	debug.c	126;"	d	file:
MAX_STR_LEN	debug.c	164;"	d	file:
MAX_STR_LEN	debug.c	168;"	d	file:
MAX_STR_LEN	debug.c	203;"	d	file:
MAX_STR_LEN	debug.c	223;"	d	file:
MAX_STR_LEN	debug.c	260;"	d	file:
OBJS	Makefile	/^OBJS = $(patsubst %.c,%.o,$(SRCS))  #子目录obj$/;"	m
OPEN_DEBUG	debug.h	93;"	d
OPEN_PDEBUG	debug.h	94;"	d
OPEN_SDEBUG	debug.h	95;"	d
PDEBUG_LEVEL	debug.h	90;"	d
PS	debug.h	109;"	d
PS	debug.h	99;"	d
PSB	debug.h	103;"	d
PSB	debug.h	110;"	d
PURPLE	debug.h	60;"	d
RED	debug.h	56;"	d
REVERSE_COLOR_FLAG	debug.h	65;"	d
SDEBUG_LEVEL	debug.h	91;"	d
SRCS	Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SS	debug.h	114;"	d
SS	debug.h	120;"	d
SSB	debug.h	117;"	d
SSB	debug.h	121;"	d
TARGET	Makefile	/^TARGET =test$/;"	m
WHITE	debug.h	62;"	d
YELLOW	debug.h	58;"	d
_LINUX_LIST_H	list.h	2;"	d
__DEBUG_H__	debug.h	2;"	d
__KEY_CMP_FPT__	hash_list.c	34;"	d	file:
__MEMORY_MANAGEMENT__	memory_management.h	2;"	d
__hlist_del	list.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__list_add	list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_add_rcu	list.h	/^static inline void __list_add_rcu(struct list_head * new,$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_for_each	list.h	415;"	d
__list_for_each_rcu	list.h	570;"	d
__list_splice	list.h	/^static inline void __list_splice(struct list_head *list,$/;"	f
_offsetof	list.h	11;"	d
_offsetof	list.h	12;"	d
_offsetof	list.h	14;"	d
begin	hash_list.c	/^	hash_map_pos_t begin,end;$/;"	m	struct:hash_map_s	file:
bucket_pos	hash_list.c	/^	uint32_t bucket_pos;\/\/bucket pos$/;"	m	struct:hash_map_pos_info	file:
bucket_size	hash_list.c	/^	uint32_t bucket_size;$/;"	m	struct:hash_map_s	file:
buf_to_str	debug.c	/^size_t buf_to_str(uint8_t *baddr,size_t blen,char *str,size_t str_len)$/;"	f
color_print_dbg_level	debug.c	/^void color_print_dbg_level(uint32_t set_str)$/;"	f
color_printf	debug.c	/^int color_printf(int set_value,const char *fmt,...)$/;"	f
color_printf_buffer	debug.c	/^void color_printf_buffer(int set_value,uint8_t *buf,size_t len,const char *fmt,...)$/;"	f
container_of	list.h	18;"	d
container_of	list.h	19;"	d
container_of	list.h	23;"	d
data_size	hash_list.c	/^	uint32_t data_size;$/;"	m	struct:hash_map_s	file:
dbg_buf	debug.h	135;"	d
dbg_buf	debug.h	146;"	d
dbg_str	debug.h	126;"	d
dbg_str	debug.h	145;"	d
debug_ip	debug.c	/^char debug_ip[MAX_IP_LEN] = "127.0.0.1";$/;"	v
debug_port	debug.c	/^unsigned int debug_port = 10276;$/;"	v
end	hash_list.c	/^	hash_map_pos_t begin,end;$/;"	m	struct:hash_map_s	file:
first	list.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
get_dbg_level	debug.h	72;"	d
get_ipaddr	debug.c	/^const char *get_ipaddr(void)  $/;"	f
hash_func	hash_list.c	/^	hash_func_fpt hash_func;$/;"	m	struct:hash_map_s	file:
hash_func_fpt	hash_list.c	/^typedef uint32_t (*hash_func_fpt)(void *key,uint32_t key_size,uint32_t bucket_size);$/;"	t	file:
hash_map_begin	hash_list.c	/^hash_map_pos_t hash_map_begin(hash_map_t *hmap)$/;"	f
hash_map_end	hash_list.c	/^hash_map_pos_t hash_map_end(hash_map_t *hmap)$/;"	f
hash_map_init	hash_list.c	/^int hash_map_init(hash_map_t **hmap,$/;"	f
hash_map_insert	hash_list.c	/^int hash_map_insert(hash_map_t *hmap,void *data)$/;"	f
hash_map_node	hash_list.c	/^struct hash_map_node {$/;"	s	file:
hash_map_pos_info	hash_list.c	/^typedef struct hash_map_pos_info{$/;"	s	file:
hash_map_pos_init	hash_list.c	/^hash_map_pos_t hash_map_pos_init(hash_map_pos_t *pos,$/;"	f
hash_map_pos_t	hash_list.c	/^}hash_map_pos_t;$/;"	t	typeref:struct:hash_map_pos_info	file:
hash_map_s	hash_list.c	/^typedef struct hash_map_s{$/;"	s	file:
hash_map_search	hash_list.c	/^hash_map_pos_t hash_map_search(hash_map_t *hmap, void *key)$/;"	f
hash_map_t	hash_list.c	/^}hash_map_t;$/;"	t	typeref:struct:hash_map_s	file:
hlist	hash_list.c	/^	struct hlist_head *hlist;$/;"	m	struct:hash_map_s	typeref:struct:hash_map_s::hlist_head	file:
hlist	hash_list.c	/^	struct hlist_head *hlist;\/\/hash table head addr$/;"	m	struct:hash_map_pos_info	typeref:struct:hash_map_pos_info::hlist_head	file:
hlist_add_after	list.h	/^static inline void hlist_add_after(struct hlist_node *n,$/;"	f
hlist_add_after_rcu	list.h	/^static inline void hlist_add_after_rcu(struct hlist_node *prev,$/;"	f
hlist_add_before	list.h	/^static inline void hlist_add_before(struct hlist_node *n,$/;"	f
hlist_add_before_rcu	list.h	/^static inline void hlist_add_before_rcu(struct hlist_node *n,$/;"	f
hlist_add_head	list.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_add_head_rcu	list.h	/^static inline void hlist_add_head_rcu(struct hlist_node *n,$/;"	f
hlist_del	list.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_del_init	list.h	/^static inline void hlist_del_init(struct hlist_node *n)$/;"	f
hlist_del_rcu	list.h	/^static inline void hlist_del_rcu(struct hlist_node *n)$/;"	f
hlist_empty	list.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	list.h	849;"	d
hlist_for_each	list.h	851;"	d
hlist_for_each_entry	list.h	866;"	d
hlist_for_each_entry_continue	list.h	878;"	d
hlist_for_each_entry_from	list.h	890;"	d
hlist_for_each_entry_rcu	list.h	920;"	d
hlist_for_each_entry_safe	list.h	903;"	d
hlist_for_each_safe	list.h	855;"	d
hlist_head	list.h	/^struct hlist_head {$/;"	s
hlist_node	hash_list.c	/^	struct hlist_node hlist_node;$/;"	m	struct:hash_map_node	typeref:struct:hash_map_node::hlist_node	file:
hlist_node	list.h	/^struct hlist_node {$/;"	s
hlist_node_p	hash_list.c	/^	struct hlist_node *hlist_node_p; \/\/node addr$/;"	m	struct:hash_map_pos_info	typeref:struct:hash_map_pos_info::hlist_node	file:
hlist_replace_rcu	list.h	/^static inline void hlist_replace_rcu(struct hlist_node *old,$/;"	f
hlist_unhashed	list.h	/^static inline int hlist_unhashed(const struct hlist_node *h)$/;"	f
init_dgram	debug.c	/^void init_dgram(void)$/;"	f
key	hash_list.c	/^	char key[1];$/;"	m	struct:hash_map_node	file:
key_cmp_fpt	hash_list.c	/^typedef int (*key_cmp_fpt)(void *key1,void *key2,uint32_t key_size);$/;"	t	file:
key_cmp_func	hash_list.c	/^	key_cmp_fpt key_cmp_func;$/;"	m	struct:hash_map_s	file:
key_size	hash_list.c	/^	uint32_t key_size;$/;"	m	struct:hash_map_s	file:
list_add	list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_rcu	list.h	/^static inline void list_add_rcu(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail_rcu	list.h	/^static inline void list_add_tail_rcu(struct list_head *new,$/;"	f
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_del_rcu	list.h	/^static inline void list_del_rcu(struct list_head *entry)$/;"	f
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_entry	list.h	393;"	d
list_for_each	list.h	401;"	d
list_for_each_continue_rcu	list.h	620;"	d
list_for_each_entry	list.h	443;"	d
list_for_each_entry_continue	list.h	479;"	d
list_for_each_entry_from	list.h	492;"	d
list_for_each_entry_rcu	list.h	602;"	d
list_for_each_entry_reverse	list.h	454;"	d
list_for_each_entry_safe	list.h	503;"	d
list_for_each_entry_safe_continue	list.h	519;"	d
list_for_each_entry_safe_from	list.h	535;"	d
list_for_each_entry_safe_reverse	list.h	550;"	d
list_for_each_prev	list.h	423;"	d
list_for_each_rcu	list.h	565;"	d
list_for_each_safe	list.h	433;"	d
list_for_each_safe_rcu	list.h	587;"	d
list_head	list.h	/^struct list_head {$/;"	s
list_is_last	list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_move	list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_prepare_entry	list.h	467;"	d
list_replace	list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
list_replace_rcu	list.h	/^static inline void list_replace_rcu(struct list_head *old,$/;"	f
list_splice	list.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
log_buf	debug.c	/^void log_buf(size_t level,const char *const_fmt,uint8_t *buf,size_t len,const char *fmt,...)$/;"	f
log_str	debug.c	/^void log_str(size_t level,const char *fmt,...)$/;"	f
map_lock	hash_list.c	/^	pthread_rwlock_t map_lock;$/;"	m	struct:hash_map_s	file:
mem_alloc_pck	memory_management.c	/^void *mem_alloc_pck(void *from,uint32_t size,uint32_t flag)$/;"	f
next	list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
pprev	list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
prefetch	list.h	/^static inline void prefetch(const void *x) {;}$/;"	f
prev	list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
printf_buffer	debug.c	/^void printf_buffer(uint8_t *buf,size_t len)$/;"	f
sd	debug.c	/^int sd;$/;"	v
send_dgram	debug.c	/^int send_dgram(void *data,size_t len)$/;"	f
send_dgram_lock	debug.c	/^pthread_mutex_t send_dgram_lock;$/;"	v
sstr	debug.c	/^void sstr(size_t slen,const char *fmt,...)$/;"	f
sstr_buf	debug.c	/^size_t sstr_buf(size_t str_len,const char *fmt,uint8_t *baddr,size_t blen)$/;"	f
swap16	debug.h	52;"	d
u16	list.h	/^typedef unsigned short    u16;$/;"	t
u32	list.h	/^typedef unsigned int      u32;$/;"	t
u8	list.h	/^typedef unsigned char     u8;$/;"	t
uint16_t	hash_list.c	/^typedef unsigned short uint16_t;$/;"	t	file:
uint32_t	hash_list.c	/^typedef unsigned int uint32_t;$/;"	t	file:
uint32_t	memory_management.h	/^typedef unsigned int uint32_t;$/;"	t
uint8_t	hash_list.c	/^typedef unsigned char uint8_t;$/;"	t	file:
value_pos	hash_list.c	/^	uint8_t value_pos;\/\/value's pos at key array$/;"	m	struct:hash_map_node	file:
vl_color_printf	debug.c	/^size_t vl_color_printf(size_t set_value,const char *fmt,va_list vl)$/;"	f
vl_sstr	debug.c	/^size_t vl_sstr(size_t slen,const char *fmt,va_list vl)$/;"	f
